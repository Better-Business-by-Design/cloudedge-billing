@typeparam T 
@inherits DataGridPage<T>

@{
    base.BuildRenderTree(__builder);
}

<div class="@((Editable ? "d-flex" : "d-none") + " flex-wrap")">
    <div class="d-flex justify-start align-center">
        <MudButton OnClick="@OnAddButtonClicked" Color="Color.Primary">@($"Add {T.TypeName}")</MudButton>
    </div>
    <div class="d-flex justify-start align-center">
        <MudButton OnClick="@RemoveRows" Color="Color.Secondary" Disabled="@(!SelectedRows.Any())">
            @($"Remove {T.TypeName}{(SelectedRows.Count > 1 ? $"s ({SelectedRows.Count})" : string.Empty)}")
        </MudButton>
    </div>
    <div class="@((Revertable ? "d-flex" : "d-none") + " justify-start align-center")">
        <MudButton OnClick="@UndoLastRowChange" Color="Color.Tertiary" Disabled="@(!CompletedChanges.Any())">Undo Last Change</MudButton>
    </div>
    <div class="d-flex justify-start align-center">
        <MudSwitch @bind-Checked="@ReadOnly" Color="Color.Primary">@(ReadOnly ? "Read Only Mode" : "Edit Mode")</MudSwitch>
    </div>
    <div class="d-flex flex-grow-1 justify-end align-center">
        <MudAlert Severity="Severity.Error" Dense="true" Class="@((_errorMessage.Equals(string.Empty) ? "d-none" : "d-block"))" >
            @(_errorMessage)
        </MudAlert>
    </div>
</div>