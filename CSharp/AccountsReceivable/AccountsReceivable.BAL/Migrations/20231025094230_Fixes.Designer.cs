// <auto-generated />
using System;
using AccountsReceivable.BAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountsReceivable.BAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231025094230_Fixes")]
    partial class Fixes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_100_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.Audit", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "Timestamp");

                    b.ToTable("Audit", "account");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.User", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("EmailAddress");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "account");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("CalcDeductionCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcGrossCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcGstCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcNetCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcPremiumCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcStockWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcWeightCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CondemnedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateKilled")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeductionCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Defects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FinishingAmount")
                        .HasColumnType("int");

                    b.Property<string>("FinishingContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GstCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InventoryCost")
                        .HasColumnType("int");

                    b.Property<long>("KillAgenda")
                        .HasColumnType("bigint");

                    b.Property<bool>("MeetsMasterGrade")
                        .HasColumnType("bit");

                    b.Property<bool>("MeetsOptimumRange")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NaitEid")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("NaitVisual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ph")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PremiumCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Presentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProcessDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Retained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SffEarTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SplitPaymentPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StockWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TailLengthDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WeightCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GradeId");

                    b.ToTable("Animal", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.AnimalTypeSummary", b =>
                {
                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("StockCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<decimal>("StockWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DocumentId", "AnimalTypeId");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("AnimalTypeSummary", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.DeductionDetail", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentSummaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "Code");

                    b.ToTable("DeductionDetail", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CalcDeductionCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcGrossCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcGstCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcNetCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcPremiumCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CalcStockTotal")
                        .HasColumnType("int");

                    b.Property<decimal>("CalcStockWeightTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalcWeightCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsignedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DairySupplierNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeductionCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmCostCentre")
                        .HasColumnType("int");

                    b.Property<string>("FieldRepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GstCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GstRegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("KillSheet")
                        .HasColumnType("bigint");

                    b.Property<string>("NaitNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PremiumCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PreviousDocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProceedsToBankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProceedsToCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("SpeciesTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("StockTotal")
                        .HasColumnType("int");

                    b.Property<decimal>("StockWeightTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SupplierComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransitId")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightCostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FarmCostCentre");

                    b.HasIndex("PlantName");

                    b.HasIndex("PreviousDocumentId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SpeciesTypeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TransitId");

                    b.ToTable("Document", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Farm", b =>
                {
                    b.Property<int>("CostCentre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostCentre"), 1L, 1);

                    b.Property<string>("ManagerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostCentre");

                    b.ToTable("Farm", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Meatwork", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Meatwork", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Plant", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MeatworkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("MeatworkName");

                    b.ToTable("Plant", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.PremiumDetail", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentSummaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "Code");

                    b.ToTable("PremiumDetail", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Modifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("ScheduleId", "GradeId", "MinWeight", "MaxWeight")
                        .IsUnique()
                        .HasDatabaseName("Price_Unique");

                    b.ToTable("Price", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10000L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeatworkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeatworkName");

                    b.HasIndex("StatusId");

                    b.HasIndex("StartDate", "EndDate", "MeatworkName")
                        .IsUnique()
                        .HasDatabaseName("Schedule_Unique");

                    b.ToTable("Schedule", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Supplier", b =>
                {
                    b.Property<int>("FarmCostCentre")
                        .HasColumnType("int");

                    b.Property<string>("MeatworkName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmCostCentre", "MeatworkName");

                    b.HasIndex("MeatworkName");

                    b.ToTable("Supplier", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Uplift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("ScheduleId", "Name")
                        .IsUnique()
                        .HasDatabaseName("Uplift_Unique");

                    b.ToTable("Uplift", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.AnimalType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesTypeId");

                    b.ToTable("AnimalType", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            DisplayName = "Bobby Calves",
                            Name = "BOBBY",
                            SpeciesTypeId = 0
                        },
                        new
                        {
                            Id = 1,
                            DisplayName = "Bull",
                            Name = "BULL",
                            SpeciesTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Cow",
                            Name = "COW",
                            SpeciesTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Manufacturing Cow",
                            Name = "MCOW",
                            SpeciesTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "Heifer",
                            Name = "HEIFER",
                            SpeciesTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            DisplayName = "Steer",
                            Name = "STEER",
                            SpeciesTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            DisplayName = "Lamb",
                            Name = "LAMB",
                            SpeciesTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            DisplayName = "Mutton",
                            Name = "MUTTON",
                            SpeciesTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            DisplayName = "Ram",
                            Name = "RAM",
                            SpeciesTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            DisplayName = "Hind",
                            Name = "HIND",
                            SpeciesTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            DisplayName = "Stag",
                            Name = "STAG",
                            SpeciesTypeId = 3
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Grade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("Grade", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            AnimalTypeId = 0,
                            Name = "BV"
                        },
                        new
                        {
                            Id = 1,
                            AnimalTypeId = 0,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 2,
                            AnimalTypeId = 0,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 3,
                            AnimalTypeId = 1,
                            Name = "M1"
                        },
                        new
                        {
                            Id = 4,
                            AnimalTypeId = 1,
                            Name = "M2"
                        },
                        new
                        {
                            Id = 5,
                            AnimalTypeId = 1,
                            Name = "M3"
                        },
                        new
                        {
                            Id = 6,
                            AnimalTypeId = 1,
                            Name = "TM1"
                        },
                        new
                        {
                            Id = 7,
                            AnimalTypeId = 1,
                            Name = "TM2"
                        },
                        new
                        {
                            Id = 8,
                            AnimalTypeId = 1,
                            Name = "TM3"
                        },
                        new
                        {
                            Id = 9,
                            AnimalTypeId = 1,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 10,
                            AnimalTypeId = 1,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 11,
                            AnimalTypeId = 2,
                            Name = "F1"
                        },
                        new
                        {
                            Id = 12,
                            AnimalTypeId = 2,
                            Name = "F2"
                        },
                        new
                        {
                            Id = 13,
                            AnimalTypeId = 2,
                            Name = "F3"
                        },
                        new
                        {
                            Id = 14,
                            AnimalTypeId = 2,
                            Name = "P1"
                        },
                        new
                        {
                            Id = 15,
                            AnimalTypeId = 2,
                            Name = "P2"
                        },
                        new
                        {
                            Id = 16,
                            AnimalTypeId = 2,
                            Name = "P3"
                        },
                        new
                        {
                            Id = 17,
                            AnimalTypeId = 2,
                            Name = "T1"
                        },
                        new
                        {
                            Id = 18,
                            AnimalTypeId = 2,
                            Name = "T2"
                        },
                        new
                        {
                            Id = 19,
                            AnimalTypeId = 2,
                            Name = "T3"
                        },
                        new
                        {
                            Id = 20,
                            AnimalTypeId = 2,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 21,
                            AnimalTypeId = 2,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 22,
                            AnimalTypeId = 3,
                            Name = "M"
                        },
                        new
                        {
                            Id = 23,
                            AnimalTypeId = 3,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 24,
                            AnimalTypeId = 3,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 25,
                            AnimalTypeId = 4,
                            Name = "A1"
                        },
                        new
                        {
                            Id = 26,
                            AnimalTypeId = 4,
                            Name = "A2"
                        },
                        new
                        {
                            Id = 27,
                            AnimalTypeId = 4,
                            Name = "A3"
                        },
                        new
                        {
                            Id = 28,
                            AnimalTypeId = 4,
                            Name = "F1"
                        },
                        new
                        {
                            Id = 29,
                            AnimalTypeId = 4,
                            Name = "F2"
                        },
                        new
                        {
                            Id = 30,
                            AnimalTypeId = 4,
                            Name = "F3"
                        },
                        new
                        {
                            Id = 31,
                            AnimalTypeId = 4,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 32,
                            AnimalTypeId = 4,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 33,
                            AnimalTypeId = 4,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 34,
                            AnimalTypeId = 4,
                            Name = "M"
                        },
                        new
                        {
                            Id = 35,
                            AnimalTypeId = 4,
                            Name = "P1"
                        },
                        new
                        {
                            Id = 36,
                            AnimalTypeId = 4,
                            Name = "P2"
                        },
                        new
                        {
                            Id = 37,
                            AnimalTypeId = 4,
                            Name = "P3"
                        },
                        new
                        {
                            Id = 38,
                            AnimalTypeId = 4,
                            Name = "T1"
                        },
                        new
                        {
                            Id = 39,
                            AnimalTypeId = 4,
                            Name = "T2"
                        },
                        new
                        {
                            Id = 40,
                            AnimalTypeId = 4,
                            Name = "T3"
                        },
                        new
                        {
                            Id = 41,
                            AnimalTypeId = 4,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 42,
                            AnimalTypeId = 4,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 43,
                            AnimalTypeId = 5,
                            Name = "A1"
                        },
                        new
                        {
                            Id = 44,
                            AnimalTypeId = 5,
                            Name = "A2"
                        },
                        new
                        {
                            Id = 45,
                            AnimalTypeId = 5,
                            Name = "A3"
                        },
                        new
                        {
                            Id = 46,
                            AnimalTypeId = 5,
                            Name = "F1"
                        },
                        new
                        {
                            Id = 47,
                            AnimalTypeId = 5,
                            Name = "F2"
                        },
                        new
                        {
                            Id = 48,
                            AnimalTypeId = 5,
                            Name = "F3"
                        },
                        new
                        {
                            Id = 49,
                            AnimalTypeId = 5,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 50,
                            AnimalTypeId = 5,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 51,
                            AnimalTypeId = 5,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 52,
                            AnimalTypeId = 5,
                            Name = "M"
                        },
                        new
                        {
                            Id = 53,
                            AnimalTypeId = 5,
                            Name = "P1"
                        },
                        new
                        {
                            Id = 54,
                            AnimalTypeId = 5,
                            Name = "P2"
                        },
                        new
                        {
                            Id = 55,
                            AnimalTypeId = 5,
                            Name = "P3"
                        },
                        new
                        {
                            Id = 56,
                            AnimalTypeId = 5,
                            Name = "T1"
                        },
                        new
                        {
                            Id = 57,
                            AnimalTypeId = 5,
                            Name = "T2"
                        },
                        new
                        {
                            Id = 58,
                            AnimalTypeId = 5,
                            Name = "T3"
                        },
                        new
                        {
                            Id = 59,
                            AnimalTypeId = 5,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 60,
                            AnimalTypeId = 5,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 61,
                            AnimalTypeId = 6,
                            Name = "A"
                        },
                        new
                        {
                            Id = 62,
                            AnimalTypeId = 6,
                            Name = "B"
                        },
                        new
                        {
                            Id = 63,
                            AnimalTypeId = 6,
                            Name = "C"
                        },
                        new
                        {
                            Id = 64,
                            AnimalTypeId = 6,
                            Name = "F"
                        },
                        new
                        {
                            Id = 65,
                            AnimalTypeId = 6,
                            Name = "M"
                        },
                        new
                        {
                            Id = 66,
                            AnimalTypeId = 6,
                            Name = "P"
                        },
                        new
                        {
                            Id = 67,
                            AnimalTypeId = 6,
                            Name = "T"
                        },
                        new
                        {
                            Id = 68,
                            AnimalTypeId = 6,
                            Name = "Y"
                        },
                        new
                        {
                            Id = 69,
                            AnimalTypeId = 6,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 70,
                            AnimalTypeId = 6,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 71,
                            AnimalTypeId = 7,
                            Name = "MF"
                        },
                        new
                        {
                            Id = 72,
                            AnimalTypeId = 7,
                            Name = "MH"
                        },
                        new
                        {
                            Id = 73,
                            AnimalTypeId = 7,
                            Name = "MM"
                        },
                        new
                        {
                            Id = 74,
                            AnimalTypeId = 7,
                            Name = "MP"
                        },
                        new
                        {
                            Id = 75,
                            AnimalTypeId = 7,
                            Name = "ML"
                        },
                        new
                        {
                            Id = 76,
                            AnimalTypeId = 7,
                            Name = "MX"
                        },
                        new
                        {
                            Id = 77,
                            AnimalTypeId = 7,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 78,
                            AnimalTypeId = 7,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 79,
                            AnimalTypeId = 8,
                            Name = "R"
                        },
                        new
                        {
                            Id = 80,
                            AnimalTypeId = 8,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 81,
                            AnimalTypeId = 8,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 82,
                            AnimalTypeId = 9,
                            Name = "AF1"
                        },
                        new
                        {
                            Id = 83,
                            AnimalTypeId = 9,
                            Name = "AF2"
                        },
                        new
                        {
                            Id = 84,
                            AnimalTypeId = 9,
                            Name = "AFH"
                        },
                        new
                        {
                            Id = 85,
                            AnimalTypeId = 9,
                            Name = "AP"
                        },
                        new
                        {
                            Id = 86,
                            AnimalTypeId = 9,
                            Name = "M1"
                        },
                        new
                        {
                            Id = 87,
                            AnimalTypeId = 9,
                            Name = "M2"
                        },
                        new
                        {
                            Id = 88,
                            AnimalTypeId = 9,
                            Name = "PD1"
                        },
                        new
                        {
                            Id = 89,
                            AnimalTypeId = 9,
                            Name = "PD2"
                        },
                        new
                        {
                            Id = 90,
                            AnimalTypeId = 9,
                            Name = "PLG"
                        },
                        new
                        {
                            Id = 91,
                            AnimalTypeId = 9,
                            Name = "PLG1"
                        },
                        new
                        {
                            Id = 92,
                            AnimalTypeId = 9,
                            Name = "PLG2"
                        },
                        new
                        {
                            Id = 93,
                            AnimalTypeId = 9,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 94,
                            AnimalTypeId = 9,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = 95,
                            AnimalTypeId = 10,
                            Name = "AF1"
                        },
                        new
                        {
                            Id = 96,
                            AnimalTypeId = 10,
                            Name = "AF2"
                        },
                        new
                        {
                            Id = 97,
                            AnimalTypeId = 10,
                            Name = "AFH"
                        },
                        new
                        {
                            Id = 98,
                            AnimalTypeId = 10,
                            Name = "AP"
                        },
                        new
                        {
                            Id = 99,
                            AnimalTypeId = 10,
                            Name = "M1"
                        },
                        new
                        {
                            Id = 100,
                            AnimalTypeId = 10,
                            Name = "M2"
                        },
                        new
                        {
                            Id = 101,
                            AnimalTypeId = 10,
                            Name = "PF1"
                        },
                        new
                        {
                            Id = 102,
                            AnimalTypeId = 10,
                            Name = "PF2"
                        },
                        new
                        {
                            Id = 103,
                            AnimalTypeId = 10,
                            Name = "PLG"
                        },
                        new
                        {
                            Id = 104,
                            AnimalTypeId = 10,
                            Name = "PLG1"
                        },
                        new
                        {
                            Id = 105,
                            AnimalTypeId = 10,
                            Name = "PLG2"
                        },
                        new
                        {
                            Id = 106,
                            AnimalTypeId = 10,
                            Name = "COND"
                        },
                        new
                        {
                            Id = 107,
                            AnimalTypeId = 10,
                            Name = "DEAD"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Read"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Read/Write"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.SpeciesType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpeciesType", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            DisplayName = "Bobby",
                            Name = "BOBBY"
                        },
                        new
                        {
                            Id = 1,
                            DisplayName = "Cattle",
                            Name = "BOVINE"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Sheep",
                            Name = "OVINE"
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Deer",
                            Name = "DEER"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Declined"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Overridden"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Superseded"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Validation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Validation", "enum");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Valid"
                        },
                        new
                        {
                            Id = 3,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Source.DeductionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meatworks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeductionDto", "source");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Source.TransitDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostCentre")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransitDto", "source");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.Audit", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Account.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.User", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("Animals")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.AnimalTypeSummary", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("AnimalTypeSummaries")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.DeductionDetail", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Animal", "Animal")
                        .WithMany("DeductionDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmCostCentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "PreviousDocument")
                        .WithMany()
                        .HasForeignKey("PreviousDocumentId");

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.HasOne("AccountsReceivable.BL.Models.Enum.SpeciesType", "SpeciesType")
                        .WithMany()
                        .HasForeignKey("SpeciesTypeId");

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Source.TransitDto", "Transit")
                        .WithMany()
                        .HasForeignKey("TransitId");

                    b.Navigation("Farm");

                    b.Navigation("Plant");

                    b.Navigation("PreviousDocument");

                    b.Navigation("Schedule");

                    b.Navigation("SpeciesType");

                    b.Navigation("Status");

                    b.Navigation("Transit");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Plant", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany("Plants")
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meatwork");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.PremiumDetail", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Animal", "Animal")
                        .WithMany("PremiumDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Price", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany("Prices")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany()
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meatwork");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Supplier", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmCostCentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany("Suppliers")
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("Meatwork");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Uplift", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany("Uplifts")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.AnimalType", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.SpeciesType", "SpeciesType")
                        .WithMany()
                        .HasForeignKey("SpeciesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpeciesType");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Grade", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.Navigation("DeductionDetails");

                    b.Navigation("PremiumDetails");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.Navigation("AnimalTypeSummaries");

                    b.Navigation("Animals");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Meatwork", b =>
                {
                    b.Navigation("Plants");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Uplifts");
                });
#pragma warning restore 612, 618
        }
    }
}
