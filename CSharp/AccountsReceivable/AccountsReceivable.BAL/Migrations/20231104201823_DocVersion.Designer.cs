// <auto-generated />
using System;
using AccountsReceivable.BAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountsReceivable.BAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231104201823_DocVersion")]
    partial class DocVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_100_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.Audit", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "Timestamp");

                    b.ToTable("Audit", "account");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.User", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("RoleId")
                        .HasColumnType("tinyint");

                    b.HasKey("EmailAddress");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "account");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("CalcDeductionCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcNetCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcPremiumCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcPrice")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcWeightCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("CondemnedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateKilled")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeductionCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Defects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FinishingAmount")
                        .HasColumnType("int");

                    b.Property<string>("FinishingContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("GradeId")
                        .HasColumnType("tinyint");

                    b.Property<int>("InventoryCost")
                        .HasColumnType("int");

                    b.Property<long>("KillAgenda")
                        .HasColumnType("bigint");

                    b.Property<bool>("MeetsMasterGrade")
                        .HasColumnType("bit");

                    b.Property<bool>("MeetsOptimumRange")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NaitEid")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("NaitVisual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Ph")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("PremiumCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Presentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("ProcessDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Retained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SffEarTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SplitPaymentPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TailLengthDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ValidationId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Weight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("WeightCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GradeId");

                    b.HasIndex("ValidationId");

                    b.ToTable("Animal", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.AnimalTypeSummary", b =>
                {
                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("AnimalTypeId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("StockCost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<decimal>("StockWeightKg")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("DocumentId", "AnimalTypeId");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("AnimalTypeSummary", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserEmailAddress");

                    b.ToTable("Comment", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.DeductionDetail", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentSummaryAmount")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "Code");

                    b.ToTable("DeductionDetail", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CalcDeductionCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcNetCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("CalcPremiumCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime?>("CalcTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CalcValidationId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("CalcWeightCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsignedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DairySupplierNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeductionCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DocumentVersion")
                        .HasColumnType("tinyint");

                    b.Property<int>("FarmCostCentre")
                        .HasColumnType("int");

                    b.Property<string>("FieldRepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("GstRegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("KillSheet")
                        .HasColumnType("bigint");

                    b.Property<string>("NaitNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PremiumCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("PreviousDocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProceedsToBankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProceedsToCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<byte>("SpeciesTypeId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransitQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightCostTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("WeightTotal")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("CalcValidationId");

                    b.HasIndex("FarmCostCentre");

                    b.HasIndex("PlantName");

                    b.HasIndex("PreviousDocumentId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SpeciesTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Document", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Farm", b =>
                {
                    b.Property<int>("CostCentre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostCentre"), 1L, 1);

                    b.Property<string>("ManagerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostCentre");

                    b.ToTable("Farm", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Meatwork", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Meatwork", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Plant", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MeatworkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("MeatworkName");

                    b.ToTable("Plant", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.PremiumDetail", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentSummaryAmount")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "Code");

                    b.ToTable("PremiumDetail", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<byte>("GradeId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("MaxWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("MinWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("ScheduleId", "GradeId", "MinWeight", "MaxWeight")
                        .IsUnique()
                        .HasDatabaseName("Price_Unique");

                    b.ToTable("Price", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10000L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeatworkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("MeatworkName");

                    b.HasIndex("StatusId");

                    b.HasIndex("StartDate", "EndDate", "MeatworkName")
                        .IsUnique()
                        .HasDatabaseName("Schedule_Unique");

                    b.ToTable("Schedule", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Supplier", b =>
                {
                    b.Property<int>("FarmCostCentre")
                        .HasColumnType("int");

                    b.Property<string>("MeatworkName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmCostCentre", "MeatworkName");

                    b.HasIndex("MeatworkName");

                    b.ToTable("Supplier", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Transit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Transit", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Uplift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<byte>("AnimalTypeId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("MaxWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("MinWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("ScheduleId", "Name", "AnimalTypeId")
                        .IsUnique()
                        .HasDatabaseName("Uplift_Unique");

                    b.ToTable("Uplift", "application");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.AnimalType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SpeciesTypeId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesTypeId");

                    b.ToTable("AnimalType", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            DisplayName = "None",
                            Name = "None",
                            SpeciesTypeId = (byte)0
                        },
                        new
                        {
                            Id = (byte)1,
                            DisplayName = "Bobby Calves",
                            Name = "BOBBY",
                            SpeciesTypeId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            DisplayName = "Bull",
                            Name = "BULL",
                            SpeciesTypeId = (byte)2
                        },
                        new
                        {
                            Id = (byte)3,
                            DisplayName = "Cow",
                            Name = "COW",
                            SpeciesTypeId = (byte)2
                        },
                        new
                        {
                            Id = (byte)4,
                            DisplayName = "Manufacturing Cow",
                            Name = "MCOW",
                            SpeciesTypeId = (byte)2
                        },
                        new
                        {
                            Id = (byte)5,
                            DisplayName = "Heifer",
                            Name = "HEIFER",
                            SpeciesTypeId = (byte)2
                        },
                        new
                        {
                            Id = (byte)6,
                            DisplayName = "Steer",
                            Name = "STEER",
                            SpeciesTypeId = (byte)2
                        },
                        new
                        {
                            Id = (byte)7,
                            DisplayName = "Lamb",
                            Name = "LAMB",
                            SpeciesTypeId = (byte)3
                        },
                        new
                        {
                            Id = (byte)8,
                            DisplayName = "Mutton",
                            Name = "MUTTON",
                            SpeciesTypeId = (byte)3
                        },
                        new
                        {
                            Id = (byte)9,
                            DisplayName = "Ram",
                            Name = "RAM",
                            SpeciesTypeId = (byte)3
                        },
                        new
                        {
                            Id = (byte)10,
                            DisplayName = "Hind",
                            Name = "HIND",
                            SpeciesTypeId = (byte)4
                        },
                        new
                        {
                            Id = (byte)11,
                            DisplayName = "Stag",
                            Name = "STAG",
                            SpeciesTypeId = (byte)4
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Grade", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AnimalTypeId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("Grade", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            AnimalTypeId = (byte)0,
                            Name = "None"
                        },
                        new
                        {
                            Id = (byte)1,
                            AnimalTypeId = (byte)1,
                            Name = "BV"
                        },
                        new
                        {
                            Id = (byte)2,
                            AnimalTypeId = (byte)1,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)3,
                            AnimalTypeId = (byte)1,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)4,
                            AnimalTypeId = (byte)2,
                            Name = "M1"
                        },
                        new
                        {
                            Id = (byte)5,
                            AnimalTypeId = (byte)2,
                            Name = "M2"
                        },
                        new
                        {
                            Id = (byte)6,
                            AnimalTypeId = (byte)2,
                            Name = "M3"
                        },
                        new
                        {
                            Id = (byte)7,
                            AnimalTypeId = (byte)2,
                            Name = "TM1"
                        },
                        new
                        {
                            Id = (byte)8,
                            AnimalTypeId = (byte)2,
                            Name = "TM2"
                        },
                        new
                        {
                            Id = (byte)9,
                            AnimalTypeId = (byte)2,
                            Name = "TM3"
                        },
                        new
                        {
                            Id = (byte)10,
                            AnimalTypeId = (byte)2,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)11,
                            AnimalTypeId = (byte)2,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)12,
                            AnimalTypeId = (byte)3,
                            Name = "F1"
                        },
                        new
                        {
                            Id = (byte)13,
                            AnimalTypeId = (byte)3,
                            Name = "F2"
                        },
                        new
                        {
                            Id = (byte)14,
                            AnimalTypeId = (byte)3,
                            Name = "F3"
                        },
                        new
                        {
                            Id = (byte)15,
                            AnimalTypeId = (byte)3,
                            Name = "P1"
                        },
                        new
                        {
                            Id = (byte)16,
                            AnimalTypeId = (byte)3,
                            Name = "P2"
                        },
                        new
                        {
                            Id = (byte)17,
                            AnimalTypeId = (byte)3,
                            Name = "P3"
                        },
                        new
                        {
                            Id = (byte)18,
                            AnimalTypeId = (byte)3,
                            Name = "T1"
                        },
                        new
                        {
                            Id = (byte)19,
                            AnimalTypeId = (byte)3,
                            Name = "T2"
                        },
                        new
                        {
                            Id = (byte)20,
                            AnimalTypeId = (byte)3,
                            Name = "T3"
                        },
                        new
                        {
                            Id = (byte)21,
                            AnimalTypeId = (byte)3,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)22,
                            AnimalTypeId = (byte)3,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)23,
                            AnimalTypeId = (byte)4,
                            Name = "M"
                        },
                        new
                        {
                            Id = (byte)24,
                            AnimalTypeId = (byte)4,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)25,
                            AnimalTypeId = (byte)4,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)26,
                            AnimalTypeId = (byte)5,
                            Name = "A1"
                        },
                        new
                        {
                            Id = (byte)27,
                            AnimalTypeId = (byte)5,
                            Name = "A2"
                        },
                        new
                        {
                            Id = (byte)28,
                            AnimalTypeId = (byte)5,
                            Name = "A3"
                        },
                        new
                        {
                            Id = (byte)29,
                            AnimalTypeId = (byte)5,
                            Name = "F1"
                        },
                        new
                        {
                            Id = (byte)30,
                            AnimalTypeId = (byte)5,
                            Name = "F2"
                        },
                        new
                        {
                            Id = (byte)31,
                            AnimalTypeId = (byte)5,
                            Name = "F3"
                        },
                        new
                        {
                            Id = (byte)32,
                            AnimalTypeId = (byte)5,
                            Name = "L1"
                        },
                        new
                        {
                            Id = (byte)33,
                            AnimalTypeId = (byte)5,
                            Name = "L2"
                        },
                        new
                        {
                            Id = (byte)34,
                            AnimalTypeId = (byte)5,
                            Name = "L3"
                        },
                        new
                        {
                            Id = (byte)35,
                            AnimalTypeId = (byte)5,
                            Name = "M"
                        },
                        new
                        {
                            Id = (byte)36,
                            AnimalTypeId = (byte)5,
                            Name = "P1"
                        },
                        new
                        {
                            Id = (byte)37,
                            AnimalTypeId = (byte)5,
                            Name = "P2"
                        },
                        new
                        {
                            Id = (byte)38,
                            AnimalTypeId = (byte)5,
                            Name = "P3"
                        },
                        new
                        {
                            Id = (byte)39,
                            AnimalTypeId = (byte)5,
                            Name = "T1"
                        },
                        new
                        {
                            Id = (byte)40,
                            AnimalTypeId = (byte)5,
                            Name = "T2"
                        },
                        new
                        {
                            Id = (byte)41,
                            AnimalTypeId = (byte)5,
                            Name = "T3"
                        },
                        new
                        {
                            Id = (byte)42,
                            AnimalTypeId = (byte)5,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)43,
                            AnimalTypeId = (byte)5,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)44,
                            AnimalTypeId = (byte)6,
                            Name = "A1"
                        },
                        new
                        {
                            Id = (byte)45,
                            AnimalTypeId = (byte)6,
                            Name = "A2"
                        },
                        new
                        {
                            Id = (byte)46,
                            AnimalTypeId = (byte)6,
                            Name = "A3"
                        },
                        new
                        {
                            Id = (byte)47,
                            AnimalTypeId = (byte)6,
                            Name = "F1"
                        },
                        new
                        {
                            Id = (byte)48,
                            AnimalTypeId = (byte)6,
                            Name = "F2"
                        },
                        new
                        {
                            Id = (byte)49,
                            AnimalTypeId = (byte)6,
                            Name = "F3"
                        },
                        new
                        {
                            Id = (byte)50,
                            AnimalTypeId = (byte)6,
                            Name = "L1"
                        },
                        new
                        {
                            Id = (byte)51,
                            AnimalTypeId = (byte)6,
                            Name = "L2"
                        },
                        new
                        {
                            Id = (byte)52,
                            AnimalTypeId = (byte)6,
                            Name = "L3"
                        },
                        new
                        {
                            Id = (byte)53,
                            AnimalTypeId = (byte)6,
                            Name = "M"
                        },
                        new
                        {
                            Id = (byte)54,
                            AnimalTypeId = (byte)6,
                            Name = "P1"
                        },
                        new
                        {
                            Id = (byte)55,
                            AnimalTypeId = (byte)6,
                            Name = "P2"
                        },
                        new
                        {
                            Id = (byte)56,
                            AnimalTypeId = (byte)6,
                            Name = "P3"
                        },
                        new
                        {
                            Id = (byte)57,
                            AnimalTypeId = (byte)6,
                            Name = "T1"
                        },
                        new
                        {
                            Id = (byte)58,
                            AnimalTypeId = (byte)6,
                            Name = "T2"
                        },
                        new
                        {
                            Id = (byte)59,
                            AnimalTypeId = (byte)6,
                            Name = "T3"
                        },
                        new
                        {
                            Id = (byte)60,
                            AnimalTypeId = (byte)6,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)61,
                            AnimalTypeId = (byte)6,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)62,
                            AnimalTypeId = (byte)7,
                            Name = "A"
                        },
                        new
                        {
                            Id = (byte)63,
                            AnimalTypeId = (byte)7,
                            Name = "B"
                        },
                        new
                        {
                            Id = (byte)64,
                            AnimalTypeId = (byte)7,
                            Name = "C"
                        },
                        new
                        {
                            Id = (byte)65,
                            AnimalTypeId = (byte)7,
                            Name = "F"
                        },
                        new
                        {
                            Id = (byte)66,
                            AnimalTypeId = (byte)7,
                            Name = "M"
                        },
                        new
                        {
                            Id = (byte)67,
                            AnimalTypeId = (byte)7,
                            Name = "P"
                        },
                        new
                        {
                            Id = (byte)68,
                            AnimalTypeId = (byte)7,
                            Name = "T"
                        },
                        new
                        {
                            Id = (byte)69,
                            AnimalTypeId = (byte)7,
                            Name = "Y"
                        },
                        new
                        {
                            Id = (byte)70,
                            AnimalTypeId = (byte)7,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)71,
                            AnimalTypeId = (byte)7,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)72,
                            AnimalTypeId = (byte)8,
                            Name = "MF"
                        },
                        new
                        {
                            Id = (byte)73,
                            AnimalTypeId = (byte)8,
                            Name = "MH"
                        },
                        new
                        {
                            Id = (byte)74,
                            AnimalTypeId = (byte)8,
                            Name = "MM"
                        },
                        new
                        {
                            Id = (byte)75,
                            AnimalTypeId = (byte)8,
                            Name = "MP"
                        },
                        new
                        {
                            Id = (byte)76,
                            AnimalTypeId = (byte)8,
                            Name = "ML"
                        },
                        new
                        {
                            Id = (byte)77,
                            AnimalTypeId = (byte)8,
                            Name = "MX"
                        },
                        new
                        {
                            Id = (byte)78,
                            AnimalTypeId = (byte)8,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)79,
                            AnimalTypeId = (byte)8,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)80,
                            AnimalTypeId = (byte)9,
                            Name = "R"
                        },
                        new
                        {
                            Id = (byte)81,
                            AnimalTypeId = (byte)9,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)82,
                            AnimalTypeId = (byte)9,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)83,
                            AnimalTypeId = (byte)10,
                            Name = "AF1"
                        },
                        new
                        {
                            Id = (byte)84,
                            AnimalTypeId = (byte)10,
                            Name = "AF2"
                        },
                        new
                        {
                            Id = (byte)85,
                            AnimalTypeId = (byte)10,
                            Name = "AFH"
                        },
                        new
                        {
                            Id = (byte)86,
                            AnimalTypeId = (byte)10,
                            Name = "AP"
                        },
                        new
                        {
                            Id = (byte)87,
                            AnimalTypeId = (byte)10,
                            Name = "M1"
                        },
                        new
                        {
                            Id = (byte)88,
                            AnimalTypeId = (byte)10,
                            Name = "M2"
                        },
                        new
                        {
                            Id = (byte)89,
                            AnimalTypeId = (byte)10,
                            Name = "PD1"
                        },
                        new
                        {
                            Id = (byte)90,
                            AnimalTypeId = (byte)10,
                            Name = "PD2"
                        },
                        new
                        {
                            Id = (byte)91,
                            AnimalTypeId = (byte)10,
                            Name = "PLG"
                        },
                        new
                        {
                            Id = (byte)92,
                            AnimalTypeId = (byte)10,
                            Name = "PLG1"
                        },
                        new
                        {
                            Id = (byte)93,
                            AnimalTypeId = (byte)10,
                            Name = "PLG2"
                        },
                        new
                        {
                            Id = (byte)94,
                            AnimalTypeId = (byte)10,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)95,
                            AnimalTypeId = (byte)10,
                            Name = "DEAD"
                        },
                        new
                        {
                            Id = (byte)96,
                            AnimalTypeId = (byte)11,
                            Name = "AF1"
                        },
                        new
                        {
                            Id = (byte)97,
                            AnimalTypeId = (byte)11,
                            Name = "AF2"
                        },
                        new
                        {
                            Id = (byte)98,
                            AnimalTypeId = (byte)11,
                            Name = "AFH"
                        },
                        new
                        {
                            Id = (byte)99,
                            AnimalTypeId = (byte)11,
                            Name = "AP"
                        },
                        new
                        {
                            Id = (byte)100,
                            AnimalTypeId = (byte)11,
                            Name = "M1"
                        },
                        new
                        {
                            Id = (byte)101,
                            AnimalTypeId = (byte)11,
                            Name = "M2"
                        },
                        new
                        {
                            Id = (byte)102,
                            AnimalTypeId = (byte)11,
                            Name = "PF1"
                        },
                        new
                        {
                            Id = (byte)103,
                            AnimalTypeId = (byte)11,
                            Name = "PF2"
                        },
                        new
                        {
                            Id = (byte)104,
                            AnimalTypeId = (byte)11,
                            Name = "PLG"
                        },
                        new
                        {
                            Id = (byte)105,
                            AnimalTypeId = (byte)11,
                            Name = "PLG1"
                        },
                        new
                        {
                            Id = (byte)106,
                            AnimalTypeId = (byte)11,
                            Name = "PLG2"
                        },
                        new
                        {
                            Id = (byte)107,
                            AnimalTypeId = (byte)11,
                            Name = "COND"
                        },
                        new
                        {
                            Id = (byte)108,
                            AnimalTypeId = (byte)11,
                            Name = "DEAD"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Role", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Name = "None"
                        },
                        new
                        {
                            Id = (byte)1,
                            Name = "Read"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Read/Write"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.SpeciesType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpeciesType", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            DisplayName = "None",
                            Name = "NONE"
                        },
                        new
                        {
                            Id = (byte)1,
                            DisplayName = "Bobby",
                            Name = "BOBBY"
                        },
                        new
                        {
                            Id = (byte)2,
                            DisplayName = "Cattle",
                            Name = "BOVINE"
                        },
                        new
                        {
                            Id = (byte)3,
                            DisplayName = "Sheep",
                            Name = "OVINE"
                        },
                        new
                        {
                            Id = (byte)4,
                            DisplayName = "Deer",
                            Name = "DEER"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Name = "None"
                        },
                        new
                        {
                            Id = (byte)1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Declined"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Overridden"
                        },
                        new
                        {
                            Id = (byte)5,
                            Name = "Superseded"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Validation", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Validation", "enum");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Name = "None"
                        },
                        new
                        {
                            Id = (byte)1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Low"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "High"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Valid"
                        });
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.Audit", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Account.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Account.User", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("Animals")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Validation", "Validation")
                        .WithMany()
                        .HasForeignKey("ValidationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Grade");

                    b.Navigation("Validation");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.AnimalTypeSummary", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("AnimalTypeSummaries")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Comment", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("StaffComments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Account.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmailAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.DeductionDetail", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Animal", "Animal")
                        .WithMany("DeductionDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.Validation", "CalcValidation")
                        .WithMany()
                        .HasForeignKey("CalcValidationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmCostCentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "PreviousDocument")
                        .WithMany()
                        .HasForeignKey("PreviousDocumentId");

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.HasOne("AccountsReceivable.BL.Models.Enum.SpeciesType", "SpeciesType")
                        .WithMany()
                        .HasForeignKey("SpeciesTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CalcValidation");

                    b.Navigation("Farm");

                    b.Navigation("Plant");

                    b.Navigation("PreviousDocument");

                    b.Navigation("Schedule");

                    b.Navigation("SpeciesType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Plant", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany("Plants")
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meatwork");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.PremiumDetail", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Animal", "Animal")
                        .WithMany("PremiumDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Price", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany("Prices")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany()
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Enum.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meatwork");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Supplier", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmCostCentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Meatwork", "Meatwork")
                        .WithMany("Suppliers")
                        .HasForeignKey("MeatworkName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("Meatwork");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Transit", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Application.Document", "Document")
                        .WithMany("Transits")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Uplift", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountsReceivable.BL.Models.Application.Schedule", "Schedule")
                        .WithMany("Uplifts")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.AnimalType", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.SpeciesType", "SpeciesType")
                        .WithMany()
                        .HasForeignKey("SpeciesTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SpeciesType");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Enum.Grade", b =>
                {
                    b.HasOne("AccountsReceivable.BL.Models.Enum.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnimalType");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Animal", b =>
                {
                    b.Navigation("DeductionDetails");

                    b.Navigation("PremiumDetails");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Document", b =>
                {
                    b.Navigation("AnimalTypeSummaries");

                    b.Navigation("Animals");

                    b.Navigation("StaffComments");

                    b.Navigation("Transits");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Meatwork", b =>
                {
                    b.Navigation("Plants");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("AccountsReceivable.BL.Models.Application.Schedule", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Uplifts");
                });
#pragma warning restore 612, 618
        }
    }
}
