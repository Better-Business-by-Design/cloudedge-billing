<Activity mc:Ignorable="sap sap2010" x:Class="Load_Documents" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1217.6,3706.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:a="clr-namespace:AutoMapper;assembly=AutoMapper" xmlns:abd="clr-namespace:AccountsReceivable.BAL.Data;assembly=AccountsReceivable.BAL" xmlns:abe="clr-namespace:AccountsReceivable.BAL.Extensions;assembly=AccountsReceivable.BAL" xmlns:abma="clr-namespace:AccountsReceivable.BL.Models.Application;assembly=AccountsReceivable.BL" xmlns:abme="clr-namespace:AccountsReceivable.BL.Models.Enum;assembly=AccountsReceivable.BL" xmlns:abmj="clr-namespace:AccountsReceivable.BL.Models.Json;assembly=AccountsReceivable.BL" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:sc1="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:stt="clr-namespace:System.Threading.Tasks;assembly=System.Private.CoreLib" xmlns:udcdw="clr-namespace:UiPath.Data.ConnectionUI.Dialog.Workaround;assembly=UiPath.Database" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>AccountsReceivable.BAL.Data</x:String>
      <x:String>AccountsReceivable.BL.Models.Application</x:String>
      <x:String>AccountsReceivable.BL.Models.Enum</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.EntityFrameworkCore</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Design</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Infrastructure</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Internal</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>AccountsReceivable.BL.Models.Json</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>AutoMapper</x:String>
      <x:String>AutoMapper.Internal</x:String>
      <x:String>AccountsReceivable.BAL.Extensions</x:String>
      <x:String>System.Threading.Tasks</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>AccountsReceivable.BAL</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Abstractions</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Relational</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.SqlServer</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Design</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Proxies</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>AccountsReceivable.BL</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>EFCore.NamingConventions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>AutoMapper</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Load Documents" sap:VirtualizedContainerService.HintSize="764,3641.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="abd:ApplicationDbContext" Name="DbContext" />
      <Variable x:TypeArguments="scg:List(abma:Supplier)" Name="Suppliers" />
      <Variable x:TypeArguments="scg:List(abma:Plant)" Name="Plants" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <InvokeMethod DisplayName="Invoke - SNI Workaround" sap:VirtualizedContainerService.HintSize="701.6,134.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SNILoadWorkaround" TargetType="udcdw:DbWorkarounds">
      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
    </InvokeMethod>
    <ui:MultipleAssign DisplayName="Assign - DbContext" sap:VirtualizedContainerService.HintSize="701.6,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="abd:ApplicationDbContext">
                <CSharpReference x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">DbContext</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="abd:ApplicationDbContext">
                <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">new ApplicationContextDesignFactory().CreateDbContext(null)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334.4,24.799999999999997" sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(abma:Supplier)">
                <CSharpReference x:TypeArguments="scg:List(abma:Supplier)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">Suppliers</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(abma:Supplier)">
                <CSharpValue x:TypeArguments="scg:List(abma:Supplier)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">DbContext.Set&lt;Supplier&gt;().ToList()</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(abma:Plant)">
                <CSharpReference x:TypeArguments="scg:List(abma:Plant)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">Plants</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(abma:Plant)">
                <CSharpValue x:TypeArguments="scg:List(abma:Plant)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">DbContext.Set&lt;Plant&gt;().ToList()</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEachFileX DisplayName="For Each - Document in Folder" Filter="*.json" Folder="Data\\Input" sap:VirtualizedContainerService.HintSize="701.6,2960.8" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Process Json Documents" sap:VirtualizedContainerService.HintSize="668,2697.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="abmj:DocumentDto" DisplayName="For Each - DocumentDto in RootDto" sap:VirtualizedContainerService.HintSize="605.6,2585.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="abmj:DocumentDto">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="abmj:DocumentDto" Name="DocumentDto" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Handle Documents" sap:VirtualizedContainerService.HintSize="572,2397.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="AnimalIndex" />
                      <Variable x:TypeArguments="abma:Document" Name="Document" />
                      <Variable x:TypeArguments="a:MapperConfiguration" Name="DocumentConfig" />
                      <Variable x:TypeArguments="x:Int32" Name="PaymentAdviceAnimalTypeIndex" />
                      <Variable x:TypeArguments="x:Int32" Name="SummaryIndex" />
                      <Variable x:TypeArguments="stt:Task" Name="PricingTask" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log - Started Document" sap:VirtualizedContainerService.HintSize="528.8,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">"Started: " + DocumentDto.Document</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:MultipleAssign DisplayName="Assign - Document" sap:VirtualizedContainerService.HintSize="528.8,210.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="abma:Document">
                                <CSharpReference x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">Document</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="abma:Document">
                                <CSharpValue x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">DocumentExtensions.Configuration.CreateMapper().Map&lt;Document&gt;(DocumentDto)</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">Document.PlantName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Plants.First(Plant =&gt; DocumentDto.PlantName.StartsWith(Plant.Name, StringComparison.OrdinalIgnoreCase)).Name</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="s:UInt16">
                                <CSharpReference x:TypeArguments="s:UInt16" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">Document.FarmCostCentre</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="s:UInt16">
                                <CSharpValue x:TypeArguments="s:UInt16" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93" xml:space="preserve">Suppliers.First(Supplier =&gt; 
	Supplier.MeatworkName.Equals(Plants.First(Plant =&gt; 
		Document.PlantName.Equals(Plant.Name, StringComparison.OrdinalIgnoreCase)
	).MeatworkName) &amp;&amp; DocumentDto.SupplierNo.Equals(Supplier.SupplierNo, StringComparison.OrdinalIgnoreCase)
).FarmCostCentre</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="abme:SpeciesTypeId">
                                <CSharpReference x:TypeArguments="abme:SpeciesTypeId" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">Document.SpeciesTypeId</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="abme:SpeciesTypeId">
                                <CSharpValue x:TypeArguments="abme:SpeciesTypeId" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105" xml:space="preserve">DocumentDto.PaymentAdviceAnimalType.Any() ? 
	DocumentDto.PaymentAdviceAnimalType.Select(paymentAdvice =&gt; 
		AnimalTypeHelper.GetAll().Single(animalType =&gt; animalType.DisplayName.Equals(paymentAdvice.AnimalType, StringComparison.OrdinalIgnoreCase)).SpeciesTypeId
	).Distinct().Single() : 
	Document.SpeciesTypeId</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:IfElseIf DisplayName="If - Previous Document Exists" sap:VirtualizedContainerService.HintSize="528.8,376" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                      <ui:IfElseIf.ConditionBlocks>
                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                          <ui:IfElseIfBlock BlockType="If">
                            <ui:IfElseIfBlock.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">!string.IsNullOrWhiteSpace(Document.PreviousDocumentId)</CSharpValue>
                              </InArgument>
                            </ui:IfElseIfBlock.Condition>
                            <ui:IfElseIfBlock.Then>
                              <ui:MultipleAssign DisplayName="Assign - Previous Document" sap:VirtualizedContainerService.HintSize="478.4,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="abme:StatusId">
                                          <CSharpReference x:TypeArguments="abme:StatusId" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">Document.StatusId</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="abme:StatusId">
                                          <CSharpValue x:TypeArguments="abme:StatusId" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133" xml:space="preserve">Document.DocumentType.Equals("BCC") ?
	StatusId.Superseded :
	Document.StatusId</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="abma:Document">
                                          <CSharpReference x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">Document.PreviousDocument</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="abma:Document">
                                          <CSharpValue x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">DbContext.Documents.Single(document =&gt; document.Id.Equals(Document.PreviousDocumentId))</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="abme:StatusId">
                                          <CSharpReference x:TypeArguments="abme:StatusId" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">Document.PreviousDocument.StatusId</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="abme:StatusId">
                                          <CSharpValue x:TypeArguments="abme:StatusId" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">StatusId.Superseded</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                        </sc:BindingList>
                      </ui:IfElseIf.ConditionBlocks>
                    </ui:IfElseIf>
                    <ui:ForEach x:TypeArguments="x:Object" DisplayName="For Each - AnimalTypeSummary in Document" sap:VirtualizedContainerService.HintSize="528.8,359.2" sap2010:WorkflowViewState.IdRef="ForEach`1_5">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - AnimalType" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                              <Assign.To>
                                <OutArgument x:TypeArguments="abme:AnimalTypeId">
                                  <CSharpReference x:TypeArguments="abme:AnimalTypeId" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">((AnimalTypeSummary) currentItem).AnimalTypeId</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="abme:AnimalTypeId">
                                  <CSharpValue x:TypeArguments="abme:AnimalTypeId" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">AnimalTypeHelper.GetAll().Single(animalType =&gt; animalType.DisplayName.Equals(DocumentDto.PaymentAdviceAnimalType.Skip(SummaryIndex).First().AnimalType, StringComparison.OrdinalIgnoreCase)).Id</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.CurrentIndex>
                        <OutArgument x:TypeArguments="x:Int32">
                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">SummaryIndex</CSharpReference>
                        </OutArgument>
                      </ui:ForEach.CurrentIndex>
                      <ui:ForEach.MaxIterations>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:ForEach.MaxIterations>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc1:IEnumerable">
                          <CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">Document.AnimalTypeSummaries</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                    </ui:ForEach>
                    <ui:ForEach x:TypeArguments="x:Object" DisplayName="For Each - Animal in Document" sap:VirtualizedContainerService.HintSize="528.8,359.2" sap2010:WorkflowViewState.IdRef="ForEach`1_6">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - GradeId" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="abme:GradeId">
                                  <CSharpReference x:TypeArguments="abme:GradeId" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">((Animal) currentItem).GradeId</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="abme:GradeId">
                                  <CSharpValue x:TypeArguments="abme:GradeId" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90" xml:space="preserve">GradeHelper.GetAll().Single(grade =&gt; grade.Name.Equals(DocumentDto.Animal.Skip(AnimalIndex).First().Grade, StringComparison.OrdinalIgnoreCase) &amp;&amp; grade.AnimalTypeId == AnimalTypeHelper.GetAll().Single(animalType =&gt; animalType.Name.Equals(DocumentDto.Animal.Skip(AnimalIndex).First().AnimalType,  StringComparison.OrdinalIgnoreCase)).Id).Id</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.CurrentIndex>
                        <OutArgument x:TypeArguments="x:Int32">
                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">AnimalIndex</CSharpReference>
                        </OutArgument>
                      </ui:ForEach.CurrentIndex>
                      <ui:ForEach.MaxIterations>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:ForEach.MaxIterations>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc1:IEnumerable">
                          <CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">Document.Animals</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                    </ui:ForEach>
                    <InvokeMethod DisplayName="Invoke - Add Document" sap:VirtualizedContainerService.HintSize="528.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_25" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="abd:ApplicationDbContext">
                          <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">DbContext</CSharpValue>
                        </InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="abma:Document">
                        <CSharpValue x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">Document</CSharpValue>
                      </InArgument>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Invoke - Save Changes" sap:VirtualizedContainerService.HintSize="528.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_26" MethodName="SaveChanges">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="abd:ApplicationDbContext">
                          <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">DbContext</CSharpValue>
                        </InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Invoke - Calculate Prices" sap:VirtualizedContainerService.HintSize="528.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_20" MethodName="CalculatePrices" TargetType="abe:DocumentExtensions">
                      <InArgument x:TypeArguments="abma:Document">
                        <CSharpValue x:TypeArguments="abma:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">Document</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="abd:ApplicationDbContext">
                        <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">DbContext</CSharpValue>
                      </InArgument>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Invoke - Save Changes" sap:VirtualizedContainerService.HintSize="528.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_23" MethodName="SaveChanges">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="abd:ApplicationDbContext">
                          <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">DbContext</CSharpValue>
                        </InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.CurrentIndex>
                <OutArgument x:TypeArguments="x:Int32" />
              </ui:ForEach.CurrentIndex>
              <ui:ForEach.MaxIterations>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:ForEach.MaxIterations>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc1:IEnumerable">
                  <CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">JsonConvert.DeserializeObject&lt;RootDto[]&gt;(File.ReadAllText(CurrentFile.FullName)).SelectMany(r =&gt; r.Documents)</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
    <InvokeMethod DisplayName="Invoke - Dispose" sap:VirtualizedContainerService.HintSize="701.6,134.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Dispose">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="abd:ApplicationDbContext">
          <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">DbContext</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
  </Sequence>
</Activity>