<Activity mc:Ignorable="sap sap2010" x:Class="Load_Pricing" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1076,1325.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:abd="clr-namespace:AccountsReceivable.BAL.Data;assembly=AccountsReceivable.BAL" xmlns:abma="clr-namespace:AccountsReceivable.BL.Models.Application;assembly=AccountsReceivable.BL" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:me="clr-namespace:Microsoft.EntityFrameworkCore;assembly=Microsoft.EntityFrameworkCore" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:sp="clr-namespace:Spire.Pdf;assembly=Spire.Pdf" xmlns:spgf="clr-namespace:Spire.Pdf.General.Find;assembly=Spire.Pdf" xmlns:udcdw="clr-namespace:UiPath.Data.ConnectionUI.Dialog.Workaround;assembly=UiPath.Database" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>AccountsReceivable.BAL.Data</x:String>
      <x:String>AccountsReceivable.BL.Models.Application</x:String>
      <x:String>AccountsReceivable.BL.Models.Enum</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.EntityFrameworkCore</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Design</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Infrastructure</x:String>
      <x:String>Microsoft.EntityFrameworkCore.Internal</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Spire.Pdf</x:String>
      <x:String>Spire.Pdf.General.Find</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>AccountsReceivable.BAL</AssemblyReference>
      <AssemblyReference>AccountsReceivable.BL</AssemblyReference>
      <AssemblyReference>EFCore.NamingConventions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Abstractions</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Design</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Proxies</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.Relational</AssemblyReference>
      <AssemblyReference>Microsoft.EntityFrameworkCore.SqlServer</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Spire.Pdf</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Load Pricing" sap:VirtualizedContainerService.HintSize="608,1260.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="abd:ApplicationDbContext" Name="DbContext" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <InvokeMethod DisplayName="Invoke - SNI Workaround" sap:VirtualizedContainerService.HintSize="545.6,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SNILoadWorkaround" TargetType="udcdw:DbWorkarounds">
      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
    </InvokeMethod>
    <ui:MultipleAssign DisplayName="Assign - DbContext" sap:VirtualizedContainerService.HintSize="545.6,117.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="abd:ApplicationDbContext">
                <CSharpReference x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">DbContext</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="abd:ApplicationDbContext">
                <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">new ApplicationContextDesignFactory().CreateDbContext(null)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEachFileX DisplayName="For Each - PDF in Folder" Filter="*.pdf" Folder="Data\\Input" sap:VirtualizedContainerService.HintSize="545.6,644" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Process File" sap:VirtualizedContainerService.HintSize="512,380.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="ClusterTable" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Read and Process PDF" DisplayName="Process Document" sap:VirtualizedContainerService.HintSize="449.6,114.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="sp:PdfDocument" Name="Document" />
                <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(s:Tuple(x:String, x:String)))" Name="Segments" />
                <Variable x:TypeArguments="s:String[][]" Name="Clusters" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Document" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="sp:PdfDocument">
                    <CSharpReference x:TypeArguments="sp:PdfDocument" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">Document</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sp:PdfDocument">
                    <CSharpValue x:TypeArguments="sp:PdfDocument" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">new PdfDocument()</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <InvokeMethod DisplayName="Invoke - Load File" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="LoadFromFile">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sp:PdfDocument">
                    <CSharpValue x:TypeArguments="sp:PdfDocument" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Document</CSharpValue>
                  </InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">CurrentFile.FullName</CSharpValue>
                </InArgument>
              </InvokeMethod>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke - Get Clusters" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Components\\Utility\\GetClusters.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="s:String[][]" x:Key="out_Clusters">
                    <CSharpReference x:TypeArguments="s:String[][]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">Clusters</CSharpReference>
                  </OutArgument>
                  <InArgument x:TypeArguments="spgf:PdfTextFind[]" x:Key="in_FoundTexts">
                    <CSharpValue x:TypeArguments="spgf:PdfTextFind[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">Document.Pages[0].FindAllText().Finds</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_VerticalDelta">2.5</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_HorizontalSegments">6</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke - Create DataTable" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Components\\Utility\\CreateDataTable.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:String[][]" x:Key="in_Clusters">
                    <CSharpValue x:TypeArguments="s:String[][]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">Clusters</CSharpValue>
                  </InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Table">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">ClusterTable</CSharpReference>
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <InvokeMethod DisplayName="Invoke - Close Document" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Close">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sp:PdfDocument">
                    <CSharpValue x:TypeArguments="sp:PdfDocument" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Document</CSharpValue>
                  </InArgument>
                </InvokeMethod.TargetObject>
              </InvokeMethod>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Create Excel File and Export to Database" DisplayName="Process Excel" sap:VirtualizedContainerService.HintSize="640,3707.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="abma:Schedule" Name="Schedule" />
                <Variable x:TypeArguments="sd:DataTable" Name="PricingTable" />
                <Variable x:TypeArguments="sd:DataTable" Name="ScheduleTable" />
                <Variable x:TypeArguments="x:String" Name="TempPath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Temp Path" sap:VirtualizedContainerService.HintSize="577.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">TempPath</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58" xml:space="preserve">Path.Combine(Environment.CurrentDirectory, "Data\\Output",  Path.GetFileNameWithoutExtension(CurrentFile.FullName) + ".xlsx")</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:CopyFile ContinueOnError="{x:Null}" DisplayName="Copy - Schedule" sap:VirtualizedContainerService.HintSize="577.6,155.2" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True">
                <ui:CopyFile.Destination>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">TempPath</CSharpValue>
                  </InArgument>
                </ui:CopyFile.Destination>
                <ui:CopyFile.Path>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">Path.Combine(Environment.CurrentDirectory, "Data\\ScheduleBase.xlsx")</CSharpValue>
                  </InArgument>
                </ui:CopyFile.Path>
              </ui:CopyFile>
              <ueab:ExcelProcessScopeX LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayAlerts="False" DisplayName="Excel - Process Scope" ExistingProcessAction="ForceKill" FileConflictResolution="CloseWithoutSaving" sap:VirtualizedContainerService.HintSize="577.6,1571.2" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" MacroSettings="DisableAll">
                <ueab:ExcelProcessScopeX.Body>
                  <ActivityAction x:TypeArguments="ui:IExcelProcess">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                    </ActivityAction.Argument>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use - Pricing File" sap:VirtualizedContainerService.HintSize="539.2,1484.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Load Pricing" sap:VirtualizedContainerService.HintSize="505.6,1215.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="Meatwork" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - Meatwork" sap:VirtualizedContainerService.HintSize="443.2,80.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">Meatwork</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">CurrentFile.Name.Contains("NI") ? "SFF NI" : "SFF SI"</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ueab:WriteRangeX DisplayName="Write - Table" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False">
                              <ueab:WriteRangeX.Destination>
                                <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">Excel.Sheet[Meatwork]</CSharpValue>
                                </InArgument>
                              </ueab:WriteRangeX.Destination>
                              <ueab:WriteRangeX.Source>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">ClusterTable</CSharpValue>
                                </InArgument>
                              </ueab:WriteRangeX.Source>
                            </ueab:WriteRangeX>
                            <ueab:ReadRangeX DisplayName="Read - Schedule" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_1">
                              <ueab:ReadRangeX.Range>
                                <InArgument x:TypeArguments="ue:IReadRangeRef">
                                  <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">Excel.Sheet[Meatwork + "-ScheduleDto"]</CSharpValue>
                                </InArgument>
                              </ueab:ReadRangeX.Range>
                              <ueab:ReadRangeX.SaveTo>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">ScheduleTable</CSharpReference>
                                </OutArgument>
                              </ueab:ReadRangeX.SaveTo>
                            </ueab:ReadRangeX>
                            <If DisplayName="If - Import Error" sap:VirtualizedContainerService.HintSize="443.2,363.2" sap2010:WorkflowViewState.IdRef="If_2">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">Convert.ToInt32(ScheduleTable.Rows[0]["Errors"]) &gt; 0</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Throw DisplayName="Throw - Data Exception" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1">
                                    <InArgument x:TypeArguments="s:Exception">
                                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">new DataException(Meatwork + " PDF Format Modified")</CSharpValue>
                                    </InArgument>
                                  </Throw>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10" />
                              </If.Else>
                            </If>
                            <ueab:ReadRangeX DisplayName="Read - PricingDto" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" VisibleOnly="False">
                              <ueab:ReadRangeX.Range>
                                <InArgument x:TypeArguments="ue:IReadRangeRef">
                                  <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">Excel.Sheet[Meatwork + "-PricingDto"]</CSharpValue>
                                </InArgument>
                              </ueab:ReadRangeX.Range>
                              <ueab:ReadRangeX.SaveTo>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">PricingTable</CSharpReference>
                                </OutArgument>
                              </ueab:ReadRangeX.SaveTo>
                            </ueab:ReadRangeX>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <ueab:ExcelApplicationCard.WorkbookPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">TempPath</CSharpValue>
                        </InArgument>
                      </ueab:ExcelApplicationCard.WorkbookPath>
                    </ueab:ExcelApplicationCard>
                  </ActivityAction>
                </ueab:ExcelProcessScopeX.Body>
              </ueab:ExcelProcessScopeX>
              <ui:DeleteFileX DisplayName="Delete - Output File" sap:VirtualizedContainerService.HintSize="577.6,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1">
                <ui:DeleteFileX.Path>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">TempPath</CSharpValue>
                  </InArgument>
                </ui:DeleteFileX.Path>
              </ui:DeleteFileX>
              <Assign DisplayName="Assign - Schedule" sap:VirtualizedContainerService.HintSize="577.6,84.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="abma:Schedule">
                    <CSharpReference x:TypeArguments="abma:Schedule" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">Schedule</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="abma:Schedule">
                    <CSharpValue x:TypeArguments="abma:Schedule" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66" xml:space="preserve">ScheduleTable.AsEnumerable().Select(ScheduleRow =&gt; 
	new Schedule {
		StartDate = Convert.ToDateTime(ScheduleRow["StartDate"]),
		EndDate = Convert.ToDateTime(ScheduleRow["EndDate"]),
		MeatworkName = Convert.ToString(ScheduleRow["Meatwork"]),
		Prices = new List&lt;Price&gt;()
	}
).Single()</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each - Pricing Row" sap:VirtualizedContainerService.HintSize="577.6,1044" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PricingRow" />
                    </ActivityAction.Argument>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Animal Type" sap:VirtualizedContainerService.HintSize="544,856" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="AnimalType" />
                          </ActivityAction.Argument>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Grade" sap:VirtualizedContainerService.HintSize="510.4,668" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="Grade" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Create Price" sap:VirtualizedContainerService.HintSize="476.8,480" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="abma:Price" Name="Price" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - Price" sap:VirtualizedContainerService.HintSize="433.6,84.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="abma:Price">
                                        <CSharpReference x:TypeArguments="abma:Price" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">Price</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="abma:Price">
                                        <CSharpValue x:TypeArguments="abma:Price" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75" xml:space="preserve">new Price {
	GradeId = GradeHelper.GetAll().Single(CurrentGrade =&gt; CurrentGrade.Name.Equals(Grade, StringComparison.OrdinalIgnoreCase) &amp;&amp; CurrentGrade.AnimalTypeId == AnimalTypeHelper.GetAll().Single(CurrentAnimalType =&gt; CurrentAnimalType.Name.Equals(AnimalType,  StringComparison.OrdinalIgnoreCase)).Id).Id,
	MinWeight = Convert.ToDecimal(PricingRow["MinWeight"]),
	MaxWeight = Convert.ToDecimal(PricingRow["MaxWeight"]),
	Cost = Convert.ToDecimal(PricingRow["BasePrice"]) + (
		Convert.ToDecimal(PricingRow["BasePrice"]) != 0 ? (
			Grade.EndsWith("1") ? Convert.ToDecimal(PricingRow["Class1"]) : Grade.EndsWith("3") ? Convert.ToDecimal(PricingRow["Class3"]) : 0 + 
			Convert.ToDecimal(PricingRow["GradeModifier"])
		) : 0
	)
}</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_2">
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">Convert.ToDecimal(PricingRow["BasePrice"]).ToString()</CSharpValue>
                                    </InArgument>
                                  </WriteLine>
                                  <InvokeMethod DisplayName="Invoke - Add Price" sap:VirtualizedContainerService.HintSize="433.6,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="scg:ICollection(abma:Price)">
                                        <CSharpValue x:TypeArguments="scg:ICollection(abma:Price)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">Schedule.Prices</CSharpValue>
                                      </InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="abma:Price">
                                      <CSharpValue x:TypeArguments="abma:Price" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">Price</CSharpValue>
                                    </InArgument>
                                  </InvokeMethod>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <ui:ForEach.Values>
                              <InArgument x:TypeArguments="sc:IEnumerable">
                                <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">Convert.ToString(PricingRow["Grade"]).Split(new string[] { "," }, StringSplitOptions.None)</CSharpValue>
                              </InArgument>
                            </ui:ForEach.Values>
                          </ui:ForEach>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">Convert.ToString(PricingRow["AnimalType"]).Split(new string[] { "," }, StringSplitOptions.None)</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                    </ui:ForEach>
                  </ActivityAction>
                </ui:ForEach.Body>
                <ui:ForEach.Values>
                  <InArgument x:TypeArguments="sc:IEnumerable">
                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">PricingTable.AsEnumerable()</CSharpValue>
                  </InArgument>
                </ui:ForEach.Values>
              </ui:ForEach>
              <InvokeMethod DisplayName="Invoke - Add Schedule" sap:VirtualizedContainerService.HintSize="577.6,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="me:DbSet(abma:Schedule)">
                    <CSharpValue x:TypeArguments="me:DbSet(abma:Schedule)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">DbContext.Set&lt;Schedule&gt;()</CSharpValue>
                  </InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="abma:Schedule">
                  <CSharpValue x:TypeArguments="abma:Schedule" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">Schedule</CSharpValue>
                </InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="Invoke - Save Changes" sap:VirtualizedContainerService.HintSize="577.6,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="SaveChanges">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="abd:ApplicationDbContext">
                    <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">DbContext</CSharpValue>
                  </InArgument>
                </InvokeMethod.TargetObject>
              </InvokeMethod>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
    <InvokeMethod DisplayName="Invoke - Dispose" sap:VirtualizedContainerService.HintSize="545.6,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Dispose">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="abd:ApplicationDbContext">
          <CSharpValue x:TypeArguments="abd:ApplicationDbContext" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">DbContext</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
  </Sequence>
</Activity>